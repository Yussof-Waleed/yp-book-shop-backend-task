services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bookshop_postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: books_shop
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5434:5432" # Use 5434 externally to avoid all conflicts
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d books_shop"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bookshop_redis
    ports:
      - "6380:6379" # Use 6380 externally to avoid potential conflicts
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  # Book Shop API
  api:
    build: .
    container_name: bookshop_api
    env_file:
      - .env
    ports:
      - "3000:3000"
    # No volumes for production-like robustness; use image code and node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
